FROM microsoft/dotnet:2.1-sdk AS build-env
WORKDIR /app

COPY api/MonitorizareVot.Ong/MonitorizareVot.Ong.sln ./
COPY api/MonitorizareVot.Ong/src/MonitorizareVot.Api/MonitorizareVot.Api.csproj src/MonitorizareVot.Api/
COPY api/MonitorizareVot.Ong/src/MonitorizareVot.Domain.Ong/MonitorizareVot.Domain.Ong.csproj src/MonitorizareVot.Domain.Ong/
COPY api/MonitorizareVot.Ong/test/MonitorizareVot.Ong.Api.Tests/MonitorizareVot.Ong.Api.Tests.csproj test/MonitorizareVot.Ong.Api.Tests/

# Copy all at once (big image probably?)
#COPY private-api/app/. ./

RUN dotnet restore

# Copy everything else and build
COPY api/MonitorizareVot.Ong/. ./
RUN dotnet publish -c Release -o ./out

# test application -- see: dotnet-docker-unit-testing.md
FROM build-env AS testrunner
WORKDIR /app/tests
# COPY api/MonitorizareVot.Ong/test/. .
ENTRYPOINT ["dotnet", "test", "--logger:trx"]

# Build runtime image
FROM microsoft/dotnet:2.1-aspnetcore-runtime
WORKDIR /
COPY --from=build-env /app/src/MonitorizareVot.Api/out/ .

# Copy appsettings.json.template - Because in /out there is one truncated by publish
# COPY --from=build-env /app/src/MonitorizareVot.Api/appsettings.json.template ./

RUN apt-get update && \
      apt-get install -y gettext \
      && rm -rf /var/lib/apt/lists/* \
      && apt-get clean -y

ENTRYPOINT ["dotnet", "MonitorizareVot.Api.dll"]

# COPY run.sh /
# RUN chmod +x run.sh
# CMD ["./run.sh"]
